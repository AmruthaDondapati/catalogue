# Creates a deployment set 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue
  labels:
    app: catalogue
spec:
  replicas: 2
  selector:
    matchLabels:
      app: catalogue 
  template:
    metadata:
      labels:
        app: catalogue
    spec:
      containers:
      - name: catalogue
        image: 355449129696.dkr.ecr.us-east-1.amazonaws.com/catalogue:4.0.1
        ports:
        - containerPort: 8080
        envFrom: 
          - configMapRef: 
              name: catalogue-configmap
--- 

apiVersion: v1
kind: Service
metadata:
  name: catalogue-svc
spec:
  # type: LoadBalancer
  selector:
    app: catalogue
  ports:
    - protocol: TCP
      port: 8080              # Port number of the service that it has to listen on 
      targetPort: 8080        # Port number of the container that it has to forward to

--- 
apiVersion: v1
kind: ConfigMap
metadata:
  name: catalogue-configmap 
data:
    MONGO_URL: "mongodb://admin1:roboshop1@roboshop-dev-docdb.cluster-c93whrwsdihk.us-east-1.docdb.amazonaws.com:27017/?ssl=true&ssl_ca_certs=rds-combined-ca-bundle.pem&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"

---
# Ingress Resource

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-myservicea
spec:
  rules:
  - host: catalogue.robos-shop.online
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: catalogue-svc
            port:
              number: 80
  ingressClassName: nginx 

